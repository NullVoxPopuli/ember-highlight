"use strict";define("dummy/app",["exports","ember","ember-resolver","ember/load-initializers","dummy/config/environment"],function(e,t,n,a,r){var i=void 0;t["default"].MODEL_FACTORY_INJECTIONS=!0,i=t["default"].Application.extend({modulePrefix:r["default"].modulePrefix,podModulePrefix:r["default"].podModulePrefix,Resolver:n["default"]}),(0,a["default"])(i,r["default"].modulePrefix),e["default"]=i}),define("dummy/components/app-version",["exports","ember-cli-app-version/components/app-version","dummy/config/environment"],function(e,t,n){var a=n["default"].APP.name,r=n["default"].APP.version;e["default"]=t["default"].extend({version:r,name:a})}),define("dummy/components/highlight-terms/component",["exports","ember-highlight/components/highlight-terms/component"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t["default"]}})}),define("dummy/controllers/application",["exports","ember"],function(e,t){e["default"]=t["default"].Controller.extend({text:"hello",text2:"tr"})}),define("dummy/controllers/array",["exports","ember"],function(e,t){e["default"]=t["default"].Controller}),define("dummy/controllers/object",["exports","ember"],function(e,t){e["default"]=t["default"].Controller}),define("dummy/helpers/pluralize",["exports","ember-inflector/lib/helpers/pluralize"],function(e,t){e["default"]=t["default"]}),define("dummy/helpers/singularize",["exports","ember-inflector/lib/helpers/singularize"],function(e,t){e["default"]=t["default"]}),define("dummy/initializers/app-version",["exports","ember-cli-app-version/initializer-factory","dummy/config/environment"],function(e,t,n){e["default"]={name:"App Version",initialize:(0,t["default"])(n["default"].APP.name,n["default"].APP.version)}}),define("dummy/initializers/container-debug-adapter",["exports","ember-resolver/container-debug-adapter"],function(e,t){e["default"]={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0];e.register("container-debug-adapter:main",t["default"]),e.inject("container-debug-adapter:main","namespace","application:main")}}}),define("dummy/initializers/ember-data",["exports","ember-data/setup-container","ember-data/-private/core"],function(e,t,n){e["default"]={name:"ember-data",initialize:t["default"]}}),define("dummy/initializers/export-application-global",["exports","ember","dummy/config/environment"],function(e,t,n){function a(){var e=arguments[1]||arguments[0];if(n["default"].exportApplicationGlobal!==!1){var a,r=n["default"].exportApplicationGlobal;a="string"==typeof r?r:t["default"].String.classify(n["default"].modulePrefix),window[a]||(window[a]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete window[a]}}))}}e.initialize=a,e["default"]={name:"export-application-global",initialize:a}}),define("dummy/instance-initializers/ember-data",["exports","ember-data/-private/instance-initializers/initialize-store-service"],function(e,t){e["default"]={name:"ember-data",initialize:t["default"]}}),define("dummy/router",["exports","ember","dummy/config/environment"],function(e,t,n){var a=t["default"].Router.extend({location:n["default"].locationType});a.map(function(){}),e["default"]=a}),define("dummy/services/ajax",["exports","ember-ajax/services/ajax"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t["default"]}})}),define("dummy/templates/application",["exports"],function(e){e["default"]=Ember.HTMLBars.template(function(){var e=function(){return{meta:{fragmentReason:!1,revision:"Ember@2.2.0",loc:{source:null,start:{line:18,column:0},end:{line:23,column:0}},moduleName:"dummy/templates/application.hbs"},isEmpty:!1,arity:0,cachedFragment:null,hasRendered:!1,buildFragment:function(e){var t=e.createDocumentFragment(),n=e.createTextNode("  ");e.appendChild(t,n);var n=e.createElement("p"),a=e.createTextNode("\n    Hello, this is a simple test for highlighting words. Give the options\n    above a try.\n  ");e.appendChild(n,a),e.appendChild(t,n);var n=e.createTextNode("\n");return e.appendChild(t,n),t},buildRenderNodes:function(){return[]},statements:[],locals:[],templates:[]}}();return{meta:{fragmentReason:{name:"missing-wrapper",problems:["multiple-nodes","wrong-type"]},revision:"Ember@2.2.0",loc:{source:null,start:{line:1,column:0},end:{line:24,column:0}},moduleName:"dummy/templates/application.hbs"},isEmpty:!1,arity:0,cachedFragment:null,hasRendered:!1,buildFragment:function(e){var t=e.createDocumentFragment(),n=e.createElement("h2");e.setAttribute(n,"id","title");var a=e.createTextNode("Welcome to Ember");e.appendChild(n,a),e.appendChild(t,n);var n=e.createTextNode("\n\n");e.appendChild(t,n);var n=e.createComment("");e.appendChild(t,n);var n=e.createTextNode("\n\n");e.appendChild(t,n);var n=e.createElement("input");e.setAttribute(n,"type","text"),e.appendChild(t,n);var n=e.createTextNode("\n");e.appendChild(t,n);var n=e.createElement("input");e.setAttribute(n,"type","text"),e.appendChild(t,n);var n=e.createTextNode("\n");e.appendChild(t,n);var n=e.createElement("br");e.appendChild(t,n);var n=e.createTextNode("\n");e.appendChild(t,n);var n=e.createElement("label"),a=e.createTextNode("\n  ");e.appendChild(n,a);var a=e.createElement("input");e.setAttribute(a,"type","checkbox"),e.appendChild(n,a);var a=e.createTextNode("\n  Case Sensitive\n");e.appendChild(n,a),e.appendChild(t,n);var n=e.createTextNode("\n");e.appendChild(t,n);var n=e.createElement("br");e.appendChild(t,n);var n=e.createTextNode("\n");e.appendChild(t,n);var n=e.createElement("label"),a=e.createTextNode("\n  ");e.appendChild(n,a);var a=e.createElement("input");e.setAttribute(a,"type","checkbox"),e.appendChild(n,a);var a=e.createTextNode("\n  Words Only\n");e.appendChild(n,a),e.appendChild(t,n);var n=e.createTextNode("\n\n");e.appendChild(t,n);var n=e.createComment("");return e.appendChild(t,n),t},buildRenderNodes:function(e,t,n){var a=e.childAt(t,[4]),r=e.childAt(t,[6]),i=e.childAt(t,[10,1]);this.cachedFragment&&e.repairClonedNode(i,[],!0);var l=e.childAt(t,[14,1]);this.cachedFragment&&e.repairClonedNode(l,[],!0);var o=new Array(10);return o[0]=e.createMorphAt(t,2,2,n),o[1]=e.createAttrMorph(a,"value"),o[2]=e.createAttrMorph(a,"oninput"),o[3]=e.createAttrMorph(r,"value"),o[4]=e.createAttrMorph(r,"oninput"),o[5]=e.createAttrMorph(i,"checked"),o[6]=e.createAttrMorph(i,"onchange"),o[7]=e.createAttrMorph(l,"checked"),o[8]=e.createAttrMorph(l,"onchange"),o[9]=e.createMorphAt(t,16,16,n),e.insertBoundary(t,null),o},statements:[["content","outlet",["loc",[null,[3,0],[3,10]]]],["attribute","value",["get","text",["loc",[null,[5,27],[5,31]]]]],["attribute","oninput",["subexpr","action",[["subexpr","mut",[["get","text",["loc",[null,[5,56],[5,60]]]]],[],["loc",[null,[5,51],[5,61]]]]],["value","currentTarget.value"],["loc",[null,[5,42],[5,91]]]]],["attribute","value",["get","text2",["loc",[null,[6,27],[6,32]]]]],["attribute","oninput",["subexpr","action",[["subexpr","mut",[["get","text2",["loc",[null,[6,57],[6,62]]]]],[],["loc",[null,[6,52],[6,63]]]]],["value","currentTarget.value"],["loc",[null,[6,43],[6,93]]]]],["attribute","checked",["get","caseSensitive",["loc",[null,[9,35],[9,48]]]]],["attribute","onchange",["subexpr","action",[["subexpr","mut",[["get","caseSensitive",["loc",[null,[9,74],[9,87]]]]],[],["loc",[null,[9,69],[9,88]]]]],["value","currentTarget.checked"],["loc",[null,[9,60],[9,120]]]]],["attribute","checked",["get","wordsOnly",["loc",[null,[14,35],[14,44]]]]],["attribute","onchange",["subexpr","action",[["subexpr","mut",[["get","wordsOnly",["loc",[null,[14,70],[14,79]]]]],[],["loc",[null,[14,65],[14,80]]]]],["value","currentTarget.checked"],["loc",[null,[14,56],[14,112]]]]],["block","highlight-terms",[["get","text",["loc",[null,[18,19],[18,23]]]],["get","text2",["loc",[null,[18,24],[18,29]]]]],["caseSensitive",["subexpr","@mut",[["get","caseSensitive",["loc",[null,[18,44],[18,57]]]]],[],[]],"wordsOnly",["subexpr","@mut",[["get","wordsOnly",["loc",[null,[18,68],[18,77]]]]],[],[]]],0,null,["loc",[null,[18,0],[23,20]]]]],locals:[],templates:[e]}}())}),define("dummy/config/environment",["ember"],function(e){var t="dummy";try{var n=t+"/config/environment",a=e["default"].$('meta[name="'+n+'"]').attr("content"),r=JSON.parse(unescape(a));return{"default":r}}catch(i){throw new Error('Could not read config from meta tag with name "'+n+'".')}}),runningTests||require("dummy/app")["default"].create({name:"ember-highlight",version:"1.1.1+4dd52e20"});